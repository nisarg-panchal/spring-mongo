services:
  sb-app:
    depends_on:
      - mongodb
    build:
      context: .
      dockerfile: Dockerfile
    container_name: "spring-app"
    environment:
      - SERVER_PORT=8080
      - SPRING_DATA_MONGODB_URI=mongodb://user1:user1@mongodb:27017/people-db?authSource=admin
      - SPRING_APPLICATION_NAME=SpringMongoDB
      - SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE=admin
      - SPRING_DATA_MONGODB_HOST=mongodb
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_USERNAME=user1
      - SPRING_DATA_MONGODB_PASSWORD=user1
      - SPRING_DATA_MONGODB_DATABASE=people-db
    ports:
      - 8080:8080
    networks:
      - spring-mongo-network
  mongodb:
    image: mongo:latest
    container_name: "mongodb"
    hostname: "mongodb"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user1
      - MONGO_INITDB_ROOT_PASSWORD=user1
      - MONGO_INITDB_DATABASE=people-db
      - MONGO_DB_USERNAME=user1
      - MONGO_DB_PASSWORD=user1
    ports:
      - 27017:27017
    command: [ "--bind_ip", "0.0.0.0" ]
    healthcheck:
      test: [ "CMD", "mongosh", "mongodb://user1:user1@mongodb:27017/admin", "--eval", "db.runCommand({ ping: 1 })" ]
      interval: 10s
      retries: 5
      start_period: 30s
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - spring-mongo-network
  mongodb-express:
    depends_on:
      mongodb:
        condition: service_healthy
    image: mongo-express
    container_name: "mongo-express"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_ADMINUSERNAME=user1
      - ME_CONFIG_MONGODB_ADMINPASSWORD=user1
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
    ports:
      - 8081:8081
    networks:
      - spring-mongo-network
networks:
  spring-mongo-network:
    driver: bridge