services:
  sb-app:
    depends_on:
      - mongodb
    build:
      context: .
      dockerfile: Dockerfile
    container_name: "docker-app"
    environment:
      - SERVER_PORT=8080
      - SPRING_APPLICATION_NAME=SpringMongoDB
      - SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE=admin
      - SPRING_DATA_MONGODB_HOST=mongodb
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_USERNAME=user1
      - SPRING_DATA_MONGODB_PASSWORD=user1
      - SPRING_DATA_MONGODB_DATABASE=people-db
    ports:
      - 8080:8080
    networks:
      - spring-mongo-network
  mongodb-express:
    depends_on:
      - mongodb
    image: mongo-express
    container_name: "mongo-express"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb  # MongoDB service name (linked)
      - ME_CONFIG_MONGODB_ADMINUSERNAME=user1  # MongoDB admin username
      - ME_CONFIG_MONGODB_ADMINPASSWORD=user1  # MongoDB admin password
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true  # Enable Mongo Express admin panel
      - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
    ports:
      - 8081:8081  # Expose port 8081 for Mongo Express UI
    networks:
      - spring-mongo-network  # Connect to the same network
  mongodb:
    image: mongo:latest
    container_name: "mongodb"
    hostname: "mongodb"
    environment:
      - MONGO_INITDB_DATABASE=people-db
      - MONGO_DB_USERNAME=${MONGO_DB_USERNAME}
      - MONGO_DB_PASSWORD=${MONGO_DB_PASSWORD}
    ports:
      - 27070:27017
    command: ["--bind_ip", "0.0.0.0"]
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - spring-mongo-network
networks:
  spring-mongo-network:
    driver: bridge